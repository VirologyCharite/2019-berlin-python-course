Notes for programming course, 09.09.2019 (Day 1)
 
- We will be learning both Python and the shell

Strg = Ctrl

Step 1: Get a github.com account and send your username to Terry.

BASH is a type of shell. "Command line" and "terminal" are basically synonyms for the shell.
 
Unix commands
N.B. Ubuntu is a flavor of Linux, which is a type of Unix.

typing "date" shows the date.
pressing Ctrl+L clears the BASH screen.
typing "ls" shows the list of files in the current directory.
typing "echo x" prints whatever x is. e.g. typing "echo hello", prints "hello".
typing "pwd" prints the working directory. This is your current location in the tree.

N.B. pay attention to slash directions. Windows uses \ whereas UNIX uses / to specify the directory.
 
typing "cd" takes you home.
typing "cd /home" specifies the destination as home. This is called an argument.
typing "cd /" takes you to the top of the tree.
typing "ls -l" is a long listing, which shows you even more detailed information than "ls" alone.
typing "ls -l | less" runs the ls -l program in a way so that all the output is visible on one screen without the need for mouse scrolling.
typing "|" is called a pipe. Pipes are metacharacters and indicate that the user is trying to connect two different programs.
N.B. spaces around a pipe are optional.

typing " " (space button) while the less program is running, pages forward and backward.
The pipe takes the output of the first program and feeds it as the input into the second program.
typing "q" is the command for qutting a running program and returning to the shell.

pressing the up-arrow while on the command line recalls previous commands.
pressing Ctrl+R allows you to search previous commands.


pressing Ctrl+A takes you to the beginning of the line.
pressing Ctrl+E takes you to the end of the line.
pressing Ctrl+B takes you back a character.
pressing Ctrl+F takes you forward a character
pressing Ctrl+D deletes a character.
pressing Alt+B takes you back a word.
pressing Alt+F takes you forward a word.
pressing Alt+D deletes a word.

pressing Enter runs the command line.
pressing Ctrl+C interrupts a currently running program.

the word counting program is "wc" which outputs 3 numbers (lines, words, and characters including spaces).
N.B. the wc program adds an extra character for creating a new line. So "abc" returns 4 characters.
typing "wc -c" counts characters.
typing "wc -l" counts lines.
typing "wc -w" counts words.

"grep" is a program that searches for patterns in files.
e.g. "grep TextYouAreSearchingFor filename | less" shows you all the lines containing the desired text.
e.g. "grep '>' xxx.fasta" will search the fasta file and only return lines containing '>'

"cut" is a program that deletes certain characters.
e.g. "Text Input | cut -f1 -d' ' | less" will cut the text after the first space, yielding "Text".

"sort" is a program that sorts inputs.
N.B. "sort" sorts inputs alphabetically, "sort -n" will sort files numercially.
 
uniq is a program that provides only unique outputs.
e.g. where less might provide 1,1,2,3 as outputs, uniq only provides 1,2,3 as an output, omitting the second 1.
"uniq -c" will count the number of instances of each unique output.

cp is a program which copies a file.

"tail -n 1" shows only the final line of a file.
"head" shows a file from the beginning.

To access the manual, simply type man, followed by a command that you would like to learn more about.

cat filename.py
The above function returns the whole text of the filename in shell. cat is short for catenate.

* is a wildcard, which allows you to pull down multiple matches with a part of their name in common.
e.g. *.py returns all python files.

typing "ls -lt" sorts files in the current directory by timestamp.

mkdir makes a directory.

To access your Windows directory from Ubuntu filesystem, use the following command:
cd /mnt/c/Users/emanuelj/Desktop

Python notes
Variables can be strings ('text'), integers (1,2,3), Boolean variables (True or False), or floating numbers (2.13456373).
Flow control methods include if/then statements, for example:

x = 9
if x > 8:
	print("x is greater than 8.")
else:
	print("x is smaller than 8.")

When the program above runs, "x is greater than 8." will be printed on the screen.

To open a file in python, use the following command:
x = open('filename.fasta')

Then, you can iterate over the variable x, reading the file line by line (the following program would print every line of the file you opened):
for line in x:
	print(line)

To read a file in python, use the following command:
x = open('filename.fasta').read()
This should save the entire file as a single variable.

Lists are one type of data structure in python.
shoppingList = ['milk','bread','butter']

typing shoppingList[1] = 'bread'

Sets are another type of data structure in python.
names = set()
names.add('Kyra')
names.add('Julia')
This returns a set {'Kyra','Julia'}


Dictionaries are another data structure in python.
ages = {}
ages['Fabian'] = 28
ages['Jackson'] = 26
This returns a dictionary {'Fabian': 28, 'Jackson': 26}
del ages[Jackson] would delete the Jackson value from the dictionary, returning only {'Fabian': 28}
Dictionaries can also contain additional dictionaries, allowing you to nest dictionaries within each other.

The .strip() function in python, cleans up empty spaces at the beginning and end of variables.

The import function in python allows you to load additional packages of functions into python.

For good programming practice, it's best to make your python programs as general as possible so they can accept multiple input types.
This makes it easier to adjust the types of input in the shell, rather than changing the code each time in python.

Standard Input (stdin), Standard Output, and Stardard Error will print to the terminal by default.

In python,
"x = x + 1" is such a common expression that there is also a shortcut:
"x += 1" 

Notes for programming course, 10.09.2019 (Day 2)

Git is a version control system for updating documents.
GitHub is an online service that provides document repositories (repos) for programmers to do collaborative projects online.

Shell commands
Alt+. recalls the last word from the previous command.
Ctrl+T switches two letters.
Alt+T switches two words.

"echo text >> filename.txt" is a way to append text to a file directly.
"cd.." returns you to the parent directory.
"cd." loads the current directory.
"cd-" goes back to the previous directory.

"git add ." adds the current directory to git.
"git add filename" adds a file to git.
N.B. adding these files must be followed by a commit command.
"git commit -m "first commit"" saves the data to git.
"git clone https://github.come/repository_name" clones the repo to a local git directory (use for the first time).

While in a git directory:
"git push" saves the latest version to the git directory.
"git pull" acquires the latest version from the git directory.
"git status" returns the status of the git directory, i.e. if your local version is up-to-date.

virtualenv is a virtual environment that simulates a computer within a directory.
to activate the virtual environment, go to the correct directory and write "source env/bin/activate"
to exit the virtual environment, write "deactivate"

To select substrings in python:
arbitrary_variable = 'askdcamsodkmcoqwmdv'
arbitrary_variable[0] = 'a'
arbitrary_variable[:5] = 'askdc'

*********IMPORTANT FOR HOMEWORK***************
For Biopython, by importing AlignIO, it requires a sequence alignment as an input file.
Therefore, when calling a python program with an Align IO function, another syntax can be used to read the alignment file:
alignments.py --file ../data/MERS.fasta --start 20 --stop 100
This will select a sub-sequence between 20 and 100.
N.B. the file, start, and stop arguments are specified by the alignments.py program.

hint: if you do the --limit hw task, you will need to implement a counter within the loop, followed by printing a summary outside of the loop.
hint #2: for the task related to checking if sub-sequences are the same, use 'if len(dictionary) == 1:' because all entries in a dictionary are unique.


Notes for programming course, 11.09.2019 (Day 3)

Python notes
Indentation is important in Python. After each if statement, the following lines must be indented.
"continue" skips directly to the next cycle of an active loop, without exiting the loop entirely.
"break" exits a loop entirely, so the program continues to read through the lines after the loop.
"exit()" is a function to immediately stop running the current python program.

Arguments defined through the python parser function can take two forms:
--argument (e.g. --file, --limit, --start) are optional.
argument (without dashes) is required.

Python operator syntax
!= not equal to
== equal to
>= greater than or equal to
<= less than or equal to
> greater than
< less than
= equal to (= only used for variable assignment! use == for if statements!)

A common strategy for debugging programs is to include print() statements at specific points in your program, so you know certain lines of code were read.

It's good practice to include annotation for every function you write (i.e. input parameters, output, etc).

To define functions in python the following syntax is used:

def Function(input_value):
	output_value = x + input_value
	return output_value

Then refer to your function later.

new_variable = Function(10) #This makes new_variable == 10 + x

For loops will separate the specified input variable into discrete objects. For example,
 
for char in 'string':
	print(char)

This program writes:
's'
't'
'r'
'i'
'n'
'g'

for loops will also iterate over objects in a list.

Biopython SeqRecords are a bit different:
In general Bio.SeqIO.parse() is used to read in sequence files as SeqRecord objects, and is typically used with a for loop like this:

from Bio import SeqIO
for seq_record in SeqIO.parse("ls_orchid.fasta", "fasta"):
    print(seq_record.id)
    print(repr(seq_record.seq))
    print(len(seq_record))

To interrupt a program that running, press Ctrl+C.

A regular expression (re) in python allows you to specify multiple possible values in python.
In other words, a regular expression is a string containing metacharacters.
e.g. find('A[AT]') would return the index for all 'AA' and 'AT' substrings.
'^AA' searches for 'AA' at the beginning of the substring.
'AA$' returns 'AA' at the end of the substring.
'AG{3,7}A'
'AG+A'
'AG*A'

re.compile(args.motif)
This builds a finite-state machine that interprets input as regular expressions.
Good way of searching for ambiguities in a sequence.

utility scripts can be put in the bin, which can be put in the pathname ($PATH).


 

